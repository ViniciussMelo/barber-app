{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinicius.melo\\\\Desktop\\\\Arquivos\\\\Projetos\\\\barber-app\\\\client\\\\src\\\\pages\\\\Funcionarios\\\\Funcionario\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip } from \"@material-ui/core\";\nimport FuncionarioService from \"../../../services/FuncionarioService\";\nimport ServicoService from \"../../../services/ServicoService\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nexport default function Funcionarios({\n  open,\n  funcionarioId,\n  close\n}) {\n  const theme = useTheme();\n  const [funcionario, setFuncionario] = useState({\n    nome: \"\",\n    email: \"\",\n    dataNascimento: new Date(),\n    sexo: \"\",\n    endereco: \"\",\n    servicos: []\n  });\n  const [sexoEnum, setSexoEnum] = useState({});\n  const [servicos, setServicos] = useState([]);\n  useEffect(() => {\n    loadFuncionario();\n    loadGenreEnum();\n    loadServices();\n  }, []);\n\n  const loadFuncionario = async () => {\n    if (funcionarioId) {\n      const {\n        data\n      } = await FuncionarioService.find(funcionarioId);\n      setFuncionario(data);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const res = await FuncionarioService.create(funcionario);\n    close(res.data);\n  };\n\n  const loadGenreEnum = async () => {\n    const {\n      data\n    } = await FuncionarioService.fillEnumGenre();\n    setSexoEnum(data.sexoEnum);\n  };\n\n  const loadServices = async () => {\n    const {\n      data\n    } = await ServicoService.findAll();\n    setServicos(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => close(false),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Cadastro de Funcionario\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Nome\",\n    id: \"nome\",\n    variant: \"outlined\",\n    value: funcionario.nome,\n    onChange: event => setFuncionario({ ...funcionario,\n      nome: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"E-mail\",\n    id: \"email\",\n    variant: \"outlined\",\n    value: funcionario.email,\n    onChange: event => setFuncionario({ ...funcionario,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    fullwidth: true,\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fullWidth: true,\n    item: true,\n    xs: 6,\n    container: true,\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date picker inline\",\n    value: funcionario.dataNascimento,\n    onChange: event => setFuncionario({ ...funcionario,\n      dataNascimento: event.target.value\n    }),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"G\\xEAnero\",\n    value: funcionario.sexo,\n    onChange: event => setFuncionario({ ...funcionario,\n      sexo: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, Object.entries(sexoEnum).map(([key, value]) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: key,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 85\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Endere\\xE7o\",\n    id: \"endere\\xE7o\",\n    variant: \"outlined\",\n    value: funcionario.endereco,\n    onChange: event => setFuncionario({ ...funcionario,\n      endereco: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Servi\\xE7os\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: funcionario.servicos,\n    onChange: event => setFuncionario({ ...funcionario,\n      servicos: event.target.value\n    }),\n    input: /*#__PURE__*/React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 44\n      }\n    }),\n    renderValue: servicos => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, servicos.map(servico => /*#__PURE__*/React.createElement(Chip, {\n      key: servico.id,\n      label: servico.nome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 49\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, servicos.map(servico => /*#__PURE__*/React.createElement(MenuItem, {\n    key: servico.id,\n    value: servico,\n    style: {\n      fontWeight: funcionario.servicos.includes(servico) ? theme.typography.fontWeightBold : theme.typography.fontWeightRegular\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, servico.nome)))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/pages/Funcionarios/Funcionario/index.js"],"names":["React","useState","useEffect","Container","Dialog","DialogTitle","Grid","TextField","DialogActions","Button","FormControl","InputLabel","Select","MenuItem","Input","Chip","FuncionarioService","ServicoService","useTheme","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Funcionarios","open","funcionarioId","close","theme","funcionario","setFuncionario","nome","email","dataNascimento","Date","sexo","endereco","servicos","sexoEnum","setSexoEnum","setServicos","loadFuncionario","loadGenreEnum","loadServices","data","find","handleSubmit","res","create","fillEnumGenre","findAll","event","target","value","Object","entries","map","key","servico","id","fontWeight","includes","typography","fontWeightBold","fontWeightRegular"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip} from \"@material-ui/core\";\r\nimport FuncionarioService from \"../../../services/FuncionarioService\";\r\nimport ServicoService from \"../../../services/ServicoService\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils  from \"@date-io/date-fns\";\r\n\r\nexport default function Funcionarios({open, funcionarioId, close}) {\r\n    const theme = useTheme();\r\n\r\n    const [funcionario, setFuncionario] = useState({\r\n        nome: \"\",\r\n        email: \"\",\r\n        dataNascimento: new Date(),\r\n        sexo: \"\",\r\n        endereco: \"\",\r\n        servicos: []\r\n    });\r\n\r\n    const [sexoEnum, setSexoEnum] = useState({});\r\n    const [servicos, setServicos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadFuncionario();\r\n        loadGenreEnum();\r\n        loadServices();\r\n    }, []);\r\n\r\n    const loadFuncionario = async () => {\r\n        if (funcionarioId) {\r\n            const {data} = await FuncionarioService.find(funcionarioId);\r\n            setFuncionario(data);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const res = await FuncionarioService.create(funcionario);\r\n        close(res.data);\r\n    }\r\n\r\n    const loadGenreEnum = async () => {\r\n        const {data} = await FuncionarioService.fillEnumGenre();\r\n        setSexoEnum(data.sexoEnum);\r\n    }\r\n\r\n    const loadServices = async () => {\r\n        const {data} = await ServicoService.findAll();\r\n        setServicos(data);\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={() => close(false)} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Cadastro de Funcionario</DialogTitle>\r\n            <form>\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Nome\"\r\n                                id=\"nome\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.nome}\r\n                                onChange={event => setFuncionario({...funcionario, nome: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"E-mail\"\r\n                                id=\"email\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.email}\r\n                                onChange={event => setFuncionario({...funcionario, email: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <MuiPickersUtilsProvider \r\n                                    fullwidth\r\n                                utils={DateFnsUtils}\r\n                            >\r\n                                <Grid\r\n                                    fullWidth\r\n                                    item xs = {6}\r\n                                    container\r\n                                    justify=\"space-around\"\r\n                                >\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Date picker inline\"\r\n                                        value={funcionario.dataNascimento}\r\n                                        onChange={event => setFuncionario({...funcionario, dataNascimento: event.target.value})}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Gênero</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Gênero\"\r\n                                    value={funcionario.sexo}\r\n                                    onChange={event => setFuncionario({...funcionario, sexo: event.target.value})}\r\n                                >\r\n                                    {Object.entries(sexoEnum).map(([key, value]) => <MenuItem key={key} value={value}>{value}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Endereço\"\r\n                                id=\"endereço\"\r\n                                variant=\"outlined\" value={funcionario.endereco}\r\n                                onChange={event => setFuncionario({...funcionario, endereco: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl \r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-mutiple-chip-label\">Serviços</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-mutiple-chip-label\"\r\n                                    id=\"demo-mutiple-chip\"\r\n                                    multiple\r\n                                    value={funcionario.servicos}\r\n                                    onChange={event => setFuncionario({...funcionario, servicos: event.target.value})}\r\n                                    input={<Input id=\"select-multiple-chip\"/>}\r\n                                    renderValue={(servicos) => (\r\n                                        <div>\r\n                                            {servicos.map((servico) => (\r\n                                                <Chip key={servico.id} label={servico.nome}/>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                >\r\n                                    {servicos.map((servico) => (\r\n                                        <MenuItem \r\n                                            key={servico.id} \r\n                                            value={servico}\r\n                                            style={{ fontWeight: funcionario.servicos.includes(servico) \r\n                                                ? theme.typography.fontWeightBold\r\n                                                : theme.typography.fontWeightRegular }}\r\n                                        >\r\n                                            {servico.nome}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </form>\r\n            <DialogActions>\r\n                <Button onClick={handleSubmit}>Cadastrar</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}