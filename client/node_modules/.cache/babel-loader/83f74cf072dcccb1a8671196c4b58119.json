{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_INFO_KEY } from \"../contexts/AuthContext\";\nconst {\n  REACT_APP_URL_API: baseUrl\n} = process.env;\nconst TOKEN_KEY = \"TOKEN\";\n\nclass AuthService {\n  async login(email, senha) {\n    const {\n      data\n    } = await Axios.post(`${baseUrl}/auth/login`, {\n      email,\n      senha\n    });\n    const {\n      token\n    } = data.content;\n    localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  logout() {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(USER_INFO_KEY);\n  }\n\n  get hasToken() {\n    return !!localStorage.getItem(TOKEN_KEY);\n  }\n\n  get token() {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/services/AuthService.js"],"names":["Axios","USER_INFO_KEY","REACT_APP_URL_API","baseUrl","process","env","TOKEN_KEY","AuthService","login","email","senha","data","post","token","content","localStorage","setItem","logout","removeItem","hasToken","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,yBAA5B;AAEA,MAAM;AAACC,EAAAA,iBAAiB,EAAEC;AAApB,IAA+BC,OAAO,CAACC,GAA7C;AACA,MAAMC,SAAS,GAAG,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAEd,QAAMC,KAAN,CAAYC,KAAZ,EAAmBC,KAAnB,EAA0B;AACtB,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMX,KAAK,CAACY,IAAN,CAAY,GAAET,OAAQ,aAAtB,EAAoC;AAACM,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAApC,CAArB;AACA,UAAM;AAACG,MAAAA;AAAD,QAAUF,IAAI,CAACG,OAArB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBV,SAArB,EAAgCO,KAAhC;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACLF,IAAAA,YAAY,CAACG,UAAb,CAAwBZ,SAAxB;AACAS,IAAAA,YAAY,CAACG,UAAb,CAAwBjB,aAAxB;AACH;;AAED,MAAIkB,QAAJ,GAAe;AACX,WAAO,CAAC,CAACJ,YAAY,CAACK,OAAb,CAAqBd,SAArB,CAAT;AACH;;AAED,MAAIO,KAAJ,GAAY;AACR,WAAOE,YAAY,CAACK,OAAb,CAAqBd,SAArB,CAAP;AACH;;AAnBa;;AAsBlB,eAAe,IAAIC,WAAJ,EAAf","sourcesContent":["import Axios from \"axios\";\r\nimport {USER_INFO_KEY} from \"../contexts/AuthContext\";\r\n\r\nconst {REACT_APP_URL_API: baseUrl} = process.env;\r\nconst TOKEN_KEY = \"TOKEN\";\r\n\r\nclass AuthService {\r\n\r\n    async login(email, senha) {\r\n        const {data} = await Axios.post(`${baseUrl}/auth/login`, {email, senha});\r\n        const {token} = data.content;\r\n        localStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(TOKEN_KEY);\r\n        localStorage.removeItem(USER_INFO_KEY);\r\n    }\r\n\r\n    get hasToken() {\r\n        return !!localStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    get token() {\r\n        return localStorage.getItem(TOKEN_KEY);\r\n    }\r\n}\r\n\r\nexport default new AuthService;\r\n"]},"metadata":{},"sourceType":"module"}