{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinicius.melo\\\\Desktop\\\\Arquivos\\\\Projetos\\\\barber-app\\\\client\\\\src\\\\pages\\\\Clientes\\\\Cliente\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, Dialog, DialogActions, DialogTitle, Grid, TextField, InputLabel, Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport ClienteService from \"../../../services/ClienteService\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format, parse } from \"date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nexport default function Cliente({\n  open,\n  clienteId,\n  close\n}) {\n  const [cliente, setCliente] = useState({\n    nome: \"\",\n    email: \"\",\n    dataNascimento: new Date(),\n    sexo: \"\",\n    endereco: \"\",\n    senha: \"\"\n  });\n  const [sexoEnum, setSexoEnum] = useState({});\n  useEffect(() => {\n    loadCliente();\n    loadGenreEnum();\n  }, []);\n\n  const loadCliente = async () => {\n    if (clienteId) {\n      const {\n        data\n      } = await ClienteService.find(clienteId);\n      setCliente(data);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const dataNascimento = format(cliente.dataNascimento, 'yyyy-MM-dd');\n    const res = await ClienteService.create({ ...cliente,\n      dataNascimento\n    });\n    close(res.data);\n  };\n\n  const loadGenreEnum = async () => {\n    const {\n      data\n    } = await ClienteService.fillEnumGenre();\n    setSexoEnum(data.sexoEnum);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => close(false),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Cadastro de Cliente\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Nome\",\n    id: \"nome\",\n    variant: \"outlined\",\n    value: cliente.nome,\n    onChange: event => setCliente({ ...cliente,\n      nome: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"E-mail\",\n    id: \"email\",\n    variant: \"outlined\",\n    value: cliente.email,\n    onChange: event => setCliente({ ...cliente,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    fullWidth: true,\n    label: \"Senha\",\n    id: \"Senha\",\n    variant: \"outlined\",\n    value: cliente.senha,\n    onChange: event => setCliente({ ...cliente,\n      senha: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-outlined\",\n    label: \"Data de nascimento\",\n    value: cliente.dataNascimento,\n    onChange: date => setCliente({ ...cliente,\n      dataNascimento: date\n    }),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"G\\xEAnero\",\n    value: cliente.sexo,\n    onChange: event => setCliente({ ...cliente,\n      sexo: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, Object.entries(sexoEnum).map(([key, value]) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 85\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Endere\\xE7o\",\n    id: \"endere\\xE7o\",\n    variant: \"outlined\",\n    value: cliente.endereco,\n    onChange: event => setCliente({ ...cliente,\n      endereco: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/pages/Clientes/Cliente/index.js"],"names":["React","useEffect","useState","Button","Container","Dialog","DialogActions","DialogTitle","Grid","TextField","InputLabel","Select","MenuItem","FormControl","ClienteService","DateFnsUtils","format","parse","MuiPickersUtilsProvider","KeyboardDatePicker","Cliente","open","clienteId","close","cliente","setCliente","nome","email","dataNascimento","Date","sexo","endereco","senha","sexoEnum","setSexoEnum","loadCliente","loadGenreEnum","data","find","handleSubmit","res","create","fillEnumGenre","event","target","value","date","Object","entries","map","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Button, Container, Dialog, DialogActions, DialogTitle, Grid, TextField, InputLabel, Select, MenuItem, FormControl} from \"@material-ui/core\";\r\nimport ClienteService from \"../../../services/ClienteService\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { format, parse } from \"date-fns\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nexport default function Cliente({open, clienteId, close}) {\r\n    const [cliente, setCliente] = useState({\r\n        nome: \"\",\r\n        email: \"\",\r\n        dataNascimento: new Date(),\r\n        sexo: \"\",\r\n        endereco: \"\",\r\n        senha: \"\",\r\n    });\r\n\r\n    const [sexoEnum, setSexoEnum] = useState({});\r\n\r\n    useEffect(() => {\r\n        loadCliente();\r\n        loadGenreEnum();\r\n    }, []);\r\n\r\n    const loadCliente = async () => {\r\n        if (clienteId) {\r\n            const {data} = await ClienteService.find(clienteId);\r\n            setCliente(data);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const dataNascimento = format(cliente.dataNascimento,'yyyy-MM-dd')\r\n        const res = await ClienteService.create({...cliente, dataNascimento});\r\n        close(res.data);\r\n    }\r\n\r\n    const loadGenreEnum = async () => {\r\n        const {data} = await ClienteService.fillEnumGenre();\r\n        setSexoEnum(data.sexoEnum);\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={() => close(false)} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Cadastro de Cliente</DialogTitle>\r\n            <form>\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Nome\"\r\n                                id=\"nome\"\r\n                                variant=\"outlined\"\r\n                                value={cliente.nome}\r\n                                onChange={event => setCliente({...cliente, nome: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"E-mail\"\r\n                                id=\"email\"\r\n                                variant=\"outlined\"\r\n                                value={cliente.email}\r\n                                onChange={event => setCliente({...cliente, email: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                fullWidth\r\n                                label=\"Senha\"\r\n                                id=\"Senha\"\r\n                                variant=\"outlined\"\r\n                                value={cliente.senha}\r\n                                onChange={event => setCliente({...cliente, senha: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-outlined\"\r\n                                    label=\"Data de nascimento\"\r\n                                    value={cliente.dataNascimento}\r\n                                    onChange={date => setCliente({...cliente, dataNascimento: date})}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl \r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Gênero</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Gênero\"\r\n                                    value={cliente.sexo}\r\n                                    onChange={event => setCliente({...cliente, sexo: event.target.value})}\r\n                                >\r\n                                    {Object.entries(sexoEnum).map(([key, value]) => <MenuItem value={key}>{value}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Endereço\"\r\n                                id=\"endereço\"\r\n                                variant=\"outlined\" value={cliente.endereco}\r\n                                onChange={event => setCliente({...cliente, endereco: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </form>\r\n            <DialogActions>\r\n                <Button onClick={handleSubmit}>Cadastrar</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}