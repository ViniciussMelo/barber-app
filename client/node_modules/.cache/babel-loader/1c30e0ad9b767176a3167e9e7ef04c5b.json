{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport UnidadeService from \"../../../services/UnidadeService\";\nexport default function Unidades({\n  open,\n  unidadeId,\n  close\n}) {\n  const [unidade, setUnidade] = useState({\n    nome: \"\",\n    endereco: \"\"\n  });\n  useEffect(() => {}, []);\n\n  const loadUnidade = async () => {\n    if (unidadeId) {\n      const {\n        data\n      } = await UnidadeService.find(unidadeId);\n      setUnidade(data);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const res = await UnidadeService.create(unidade);\n    close(res.data);\n  };\n}","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/pages/Unidades/Unidade/index.js"],"names":["React","useState","useEffect","UnidadeService","Unidades","open","unidadeId","close","unidade","setUnidade","nome","endereco","loadUnidade","data","find","handleSubmit","res","create"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA;AAAlB,CAAlB,EAA2C;AACxD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC;AACrCS,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAtC;AAKAT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,WAAW,GAAG,YAAW;AAC7B,QAAGN,SAAH,EAAa;AACX,YAAM;AAACO,QAAAA;AAAD,UAAS,MAAMV,cAAc,CAACW,IAAf,CAAoBR,SAApB,CAArB;AACAG,MAAAA,UAAU,CAACI,IAAD,CAAV;AACD;AACF,GALD;;AAOA,QAAME,YAAY,GAAG,YAAW;AAC9B,UAAMC,GAAG,GAAG,MAAMb,cAAc,CAACc,MAAf,CAAsBT,OAAtB,CAAlB;AACAD,IAAAA,KAAK,CAACS,GAAG,CAACH,IAAL,CAAL;AACD,GAHD;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UnidadeService from \"../../../services/UnidadeService\";\r\n\r\nexport default function Unidades({open, unidadeId, close}){\r\n  const [unidade, setUnidade] = useState({\r\n    nome: \"\",\r\n    endereco: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n\r\n  const loadUnidade = async() => {\r\n    if(unidadeId){\r\n      const {data} = await UnidadeService.find(unidadeId);\r\n      setUnidade(data);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async() => {\r\n    const res = await UnidadeService.create(unidade);\r\n    close(res.data);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}