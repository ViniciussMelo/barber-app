{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinicius.melo\\\\Desktop\\\\Arquivos\\\\Projetos\\\\barber-app\\\\client\\\\src\\\\pages\\\\Funcionarios\\\\Funcionario\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip } from \"@material-ui/core\";\nimport FuncionarioService from \"../../../services/FuncionarioService\";\nimport ServicoService from \"../../../services/ServicoService\";\nimport { useTheme } from \"@material-ui/core/styles\";\nexport default function Funcionarios({\n  open,\n  funcionarioId,\n  close\n}) {\n  const theme = useTheme();\n  const [funcionario, setFuncionario] = useState({\n    nome: \"\",\n    email: \"\",\n    dataNascimento: \"\",\n    sexo: \"\",\n    endereco: \"\",\n    servicos: []\n  });\n  const [sexoEnum, setSexoEnum] = useState({});\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState([]);\n  useEffect(() => {\n    loadFuncionario();\n    loadGenreEnum();\n    loadServices();\n  }, []);\n\n  const loadFuncionario = async () => {\n    if (funcionarioId) {\n      const {\n        data\n      } = await FuncionarioService.find(funcionarioId);\n      setFuncionario(data);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const res = await FuncionarioService.create(funcionario);\n    close(res.data);\n  };\n\n  const loadGenreEnum = async () => {\n    const {\n      data\n    } = await FuncionarioService.fillEnumGenre();\n    setSexoEnum(data.sexoEnum);\n  };\n\n  const loadServices = async () => {\n    const {\n      data\n    } = await ServicoService.findAll();\n    setServicos(data);\n  };\n\n  const handleSelectedServices = id => {\n    const alreadySelected = selectedServicos.findIndex(servico => servico === id);\n\n    if (alreadySelected >= 0) {\n      const filteredServices = selectedServicos.filter(service => service !== id);\n      setSelectedServicos(filteredServices);\n    } else {\n      setSelectedServicos([...selectedServicos, id]);\n    }\n  };\n\n  const getStyles = (servicoId, theme) => {};\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => close(false),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Cadastro de Funcionario\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Nome\",\n    id: \"nome\",\n    variant: \"outlined\",\n    value: funcionario.nome,\n    onChange: event => setFuncionario({ ...funcionario,\n      nome: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"E-mail\",\n    id: \"email\",\n    variant: \"outlined\",\n    value: funcionario.email,\n    onChange: event => setFuncionario({ ...funcionario,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Data de Nascimento\",\n    id: \"data-nascimento\",\n    variant: \"outlined\",\n    value: funcionario.dataNascimento,\n    onChange: event => setFuncionario({ ...funcionario,\n      dataNascimento: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"G\\xEAnero\",\n    value: funcionario.sexo,\n    onChange: event => setFuncionario({ ...funcionario,\n      sexo: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, Object.entries(sexoEnum).map(([key, value]) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: key,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 85\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Endere\\xE7o\",\n    id: \"endere\\xE7o\",\n    variant: \"outlined\",\n    value: funcionario.endereco,\n    onChange: event => setFuncionario({ ...funcionario,\n      endereco: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"Servi\\xE7os\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    label: \"Servi\\xE7os\",\n    value: funcionario.servicos,\n    onChange: event => setFuncionario({ ...funcionario,\n      servico: event.target.value\n    }),\n    input: /*#__PURE__*/React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, servicos.map(servico => /*#__PURE__*/React.createElement(MenuItem, {\n    key: servico.id,\n    value: servico.nome,\n    styles: getStyles(servico.id, theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, servico.nome)))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/pages/Funcionarios/Funcionario/index.js"],"names":["React","useState","useEffect","Container","Dialog","DialogTitle","Grid","TextField","DialogActions","Button","FormControl","InputLabel","Select","MenuItem","Input","Chip","FuncionarioService","ServicoService","useTheme","Funcionarios","open","funcionarioId","close","theme","funcionario","setFuncionario","nome","email","dataNascimento","sexo","endereco","servicos","sexoEnum","setSexoEnum","setServicos","selectedServicos","setSelectedServicos","loadFuncionario","loadGenreEnum","loadServices","data","find","handleSubmit","res","create","fillEnumGenre","findAll","handleSelectedServices","id","alreadySelected","findIndex","servico","filteredServices","filter","service","getStyles","servicoId","event","target","value","Object","entries","map","key"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip} from \"@material-ui/core\";\r\nimport FuncionarioService from \"../../../services/FuncionarioService\";\r\nimport ServicoService from \"../../../services/ServicoService\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function Funcionarios({open, funcionarioId, close}) {\r\n    const theme = useTheme();\r\n\r\n    const [funcionario, setFuncionario] = useState({\r\n        nome: \"\",\r\n        email: \"\",\r\n        dataNascimento: \"\",\r\n        sexo: \"\",\r\n        endereco: \"\",\r\n        servicos: []\r\n    });\r\n\r\n    const [sexoEnum, setSexoEnum] = useState({});\r\n    const [servicos, setServicos] = useState([]);\r\n    const [selectedServicos, setSelectedServicos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadFuncionario();\r\n        loadGenreEnum();\r\n        loadServices();\r\n    }, []);\r\n\r\n    const loadFuncionario = async () => {\r\n        if (funcionarioId) {\r\n            const {data} = await FuncionarioService.find(funcionarioId);\r\n            setFuncionario(data);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const res = await FuncionarioService.create(funcionario);\r\n        close(res.data);\r\n    }\r\n\r\n    const loadGenreEnum = async () => {\r\n        const {data} = await FuncionarioService.fillEnumGenre();\r\n        setSexoEnum(data.sexoEnum);\r\n    }\r\n\r\n    const loadServices = async () => {\r\n        const {data} = await ServicoService.findAll();\r\n        setServicos(data);        \r\n    }\r\n\r\n    const handleSelectedServices = (id) => {\r\n        const alreadySelected = selectedServicos.findIndex(servico => servico === id);\r\n\r\n        if(alreadySelected >= 0){\r\n            const filteredServices = selectedServicos.filter(service => service !== id);\r\n\r\n            setSelectedServicos(filteredServices);\r\n        } else {\r\n            setSelectedServicos([...selectedServicos, id]);\r\n        }\r\n    }\r\n\r\n    const getStyles = (servicoId, theme) => {}\r\n\r\n    return (\r\n        <Dialog onClose={() => close(false)} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Cadastro de Funcionario</DialogTitle>\r\n            <form>\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Nome\"\r\n                                id=\"nome\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.nome}\r\n                                onChange={event => setFuncionario({...funcionario, nome: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"E-mail\"\r\n                                id=\"email\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.email}\r\n                                onChange={event => setFuncionario({...funcionario, email: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Data de Nascimento\"\r\n                                id=\"data-nascimento\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.dataNascimento}\r\n                                onChange={event => setFuncionario({...funcionario, dataNascimento: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Gênero</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Gênero\"\r\n                                    value={funcionario.sexo}\r\n                                    onChange={event => setFuncionario({...funcionario, sexo: event.target.value})}\r\n                                >\r\n                                    {Object.entries(sexoEnum).map(([key, value]) => <MenuItem key={key} value={value}>{value}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Endereço\"\r\n                                id=\"endereço\"\r\n                                variant=\"outlined\" value={funcionario.endereco}\r\n                                onChange={event => setFuncionario({...funcionario, endereco: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-mutiple-chip-label\">Serviços</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-mutiple-chip-label\"\r\n                                    id=\"demo-mutiple-chip\"\r\n                                    multiple\r\n                                    label=\"Serviços\"\r\n                                    value={funcionario.servicos}\r\n                                    onChange={event => setFuncionario({...funcionario, servico: event.target.value})}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                >\r\n                                    {servicos.map((servico) => (\r\n                                        <MenuItem \r\n                                            key={servico.id} \r\n                                            value={servico.nome}\r\n                                            styles={getStyles(servico.id, theme)}\r\n                                        >\r\n                                            {servico.nome}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </form>\r\n            <DialogActions>\r\n                <Button onClick={handleSubmit}>Cadastrar</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}