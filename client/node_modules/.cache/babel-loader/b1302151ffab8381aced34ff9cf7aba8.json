{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinicius.melo\\\\Desktop\\\\Arquivos\\\\Projetos\\\\barber-app\\\\client\\\\src\\\\pages\\\\Funcionarios\\\\Funcionario\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CardContent, Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip } from \"@material-ui/core\";\nimport FuncionarioService from \"../../../services/FuncionarioService\";\nimport ServicoService from \"../../../services/ServicoService\";\nexport default function Funcionarios({\n  open,\n  funcionarioId,\n  close\n}) {\n  const [funcionario, setFuncionario] = useState({\n    nome: \"\",\n    email: \"\",\n    dataNascimento: \"\",\n    sexo: \"\",\n    endereco: \"\"\n  });\n  const [sexoEnum, setSexoEnum] = useState({});\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState([]);\n  useEffect(() => {\n    loadFuncionario();\n    loadGenreEnum();\n    loadServices();\n  }, []);\n\n  const loadFuncionario = async () => {\n    if (funcionarioId) {\n      const {\n        data\n      } = await FuncionarioService.find(funcionarioId);\n      setFuncionario(data);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const res = await FuncionarioService.create(funcionario);\n    close(res.data);\n  };\n\n  const loadGenreEnum = async () => {\n    const {\n      data\n    } = await FuncionarioService.fillEnumGenre();\n    setSexoEnum(data.sexoEnum);\n  };\n\n  const loadServices = async () => {\n    const {\n      data\n    } = await ServicoService.findAll();\n    setServicos(data);\n  };\n\n  const handleSelectedServices = id => {\n    const alreadySelected = setSelectedServicos.findIndex(servico => servico === id);\n\n    if (alreadySelected >= 0) {\n      const filteredServices = setSelectedServicos.filter(service => service !== id);\n      setSelectedServicos(filteredServices);\n    } else {\n      setSelectedServicos([...selectedServicos, id]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => close(false),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Cadastro de Funcionario\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Nome\",\n    id: \"nome\",\n    variant: \"outlined\",\n    value: funcionario.nome,\n    onChange: event => setFuncionario({ ...funcionario,\n      nome: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"E-mail\",\n    id: \"email\",\n    variant: \"outlined\",\n    value: funcionario.email,\n    onChange: event => setFuncionario({ ...funcionario,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Data de Nascimento\",\n    id: \"data-nascimento\",\n    variant: \"outlined\",\n    value: funcionario.dataNascimento,\n    onChange: event => setFuncionario({ ...funcionario,\n      dataNascimento: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    label: \"G\\xEAnero\",\n    value: funcionario.sexo,\n    onChange: event => setFuncionario({ ...funcionario,\n      sexo: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, Object.entries(sexoEnum).map(([key, value]) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 85\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Endere\\xE7o\",\n    id: \"endere\\xE7o\",\n    variant: \"outlined\",\n    value: funcionario.endereco,\n    onChange: event => setFuncionario({ ...funcionario,\n      endereco: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Servi\\xE7os\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: 1,\n    onChange: () => {},\n    input: /*#__PURE__*/React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 36\n      }\n    }),\n    renderValue: selected => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }),\n    MenuProps: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, servicos.map(servico =>\n  /*#__PURE__*/\n  //<MenuItem key={servico.id} value={servico.nome}></MenuItem>\n  React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"servico.id\"))\n  /*names.map((name) => (\r\n      <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n      {name}\r\n      </MenuItem>\r\n  ))*/\n  )))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/pages/Funcionarios/Funcionario/index.js"],"names":["React","useState","useEffect","CardContent","Container","Dialog","DialogTitle","Grid","TextField","DialogActions","Button","FormControl","InputLabel","Select","MenuItem","Input","Chip","FuncionarioService","ServicoService","Funcionarios","open","funcionarioId","close","funcionario","setFuncionario","nome","email","dataNascimento","sexo","endereco","sexoEnum","setSexoEnum","servicos","setServicos","selectedServicos","setSelectedServicos","loadFuncionario","loadGenreEnum","loadServices","data","find","handleSubmit","res","create","fillEnumGenre","findAll","handleSelectedServices","id","alreadySelected","findIndex","servico","filteredServices","filter","service","event","target","value","Object","entries","map","key","selected"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {CardContent, Container, Dialog, DialogTitle, Grid, TextField, DialogActions, Button, FormControl, InputLabel, Select, MenuItem, Input, Chip} from \"@material-ui/core\";\r\nimport FuncionarioService from \"../../../services/FuncionarioService\";\r\nimport ServicoService from \"../../../services/ServicoService\";\r\n\r\nexport default function Funcionarios({open, funcionarioId, close}) {\r\n    const [funcionario, setFuncionario] = useState({\r\n        nome: \"\",\r\n        email: \"\",\r\n        dataNascimento: \"\",\r\n        sexo: \"\",\r\n        endereco: \"\",\r\n    });\r\n\r\n    const [sexoEnum, setSexoEnum] = useState({});\r\n    const [servicos, setServicos] = useState([]);\r\n    const [selectedServicos, setSelectedServicos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadFuncionario();\r\n        loadGenreEnum();\r\n        loadServices();\r\n    }, []);\r\n\r\n    const loadFuncionario = async () => {\r\n        if (funcionarioId) {\r\n            const {data} = await FuncionarioService.find(funcionarioId);\r\n            setFuncionario(data);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const res = await FuncionarioService.create(funcionario);\r\n        close(res.data);\r\n    }\r\n\r\n    const loadGenreEnum = async () => {\r\n        const {data} = await FuncionarioService.fillEnumGenre();\r\n        setSexoEnum(data.sexoEnum);\r\n    }\r\n\r\n    const loadServices = async () => {\r\n        const {data} = await ServicoService.findAll();\r\n        setServicos(data);        \r\n    }\r\n\r\n    const handleSelectedServices = (id) => {\r\n        const alreadySelected = setSelectedServicos.findIndex(servico => servico === id);\r\n\r\n        if(alreadySelected >= 0){\r\n            const filteredServices = setSelectedServicos.filter(service => service !== id);\r\n\r\n            setSelectedServicos(filteredServices);\r\n        } else {\r\n            setSelectedServicos([...selectedServicos, id]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={() => close(false)} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Cadastro de Funcionario</DialogTitle>\r\n            <form>\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Nome\"\r\n                                id=\"nome\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.nome}\r\n                                onChange={event => setFuncionario({...funcionario, nome: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"E-mail\"\r\n                                id=\"email\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.email}\r\n                                onChange={event => setFuncionario({...funcionario, email: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Data de Nascimento\"\r\n                                id=\"data-nascimento\"\r\n                                variant=\"outlined\"\r\n                                value={funcionario.dataNascimento}\r\n                                onChange={event => setFuncionario({...funcionario, dataNascimento: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                            >\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Gênero</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Gênero\"\r\n                                    value={funcionario.sexo}\r\n                                    onChange={event => setFuncionario({...funcionario, sexo: event.target.value})}\r\n                                >\r\n                                    {Object.entries(sexoEnum).map(([key, value]) => <MenuItem value={key}>{value}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Endereço\"\r\n                                id=\"endereço\"\r\n                                variant=\"outlined\" value={funcionario.endereco}\r\n                                onChange={event => setFuncionario({...funcionario, endereco: event.target.value})}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                        <FormControl>\r\n                            <InputLabel id=\"demo-mutiple-chip-label\">Serviços</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-mutiple-chip-label\"\r\n                            id=\"demo-mutiple-chip\"\r\n                            multiple\r\n                            value={1}\r\n                            onChange={() => {}}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div>\r\n                                {/*selected.map((value) => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))*/}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={() => {}}\r\n                            >\r\n                            {servicos.map((servico) => (\r\n                                //<MenuItem key={servico.id} value={servico.nome}></MenuItem>\r\n                                <h1>servico.id</h1>\r\n                            ))\r\n                            \r\n                            /*names.map((name) => (\r\n                                <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n                                {name}\r\n                                </MenuItem>\r\n                            ))*/}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </form>\r\n            <DialogActions>\r\n                <Button onClick={handleSubmit}>Cadastrar</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}