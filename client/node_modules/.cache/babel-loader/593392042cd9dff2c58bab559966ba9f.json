{"ast":null,"code":"import Axios from \"axios\";\nimport AuthService from \"../services/AuthService\";\nimport { history } from \"../routes\";\nconst {\n  REACT_APP_URL_API\n} = process.env;\nconst api = Axios.create({\n  baseURL: `${REACT_APP_URL_API}`\n});\napi.interceptors.request.use(value => {\n  value.headers['X-AUTH-TOKEN'] = `Bearer ${AuthService.token}`;\n  return value;\n});\napi.interceptors.response.use(value => {\n  if (value.data && value.data.message) {\n    alert(value.data.message);\n  }\n\n  return value;\n}, error => {\n  const {\n    response\n  } = error;\n\n  if (response.data) {\n    alert(response.data);\n  }\n\n  if (response.status === 401) {\n    // @Todo emitir alerta\n    history.push('/');\n  }\n});\nexport { api };","map":{"version":3,"sources":["C:/Users/vinicius.melo/Desktop/Arquivos/Projetos/barber-app/client/src/api/api.js"],"names":["Axios","AuthService","history","REACT_APP_URL_API","process","env","api","create","baseURL","interceptors","request","use","value","headers","token","response","data","message","alert","error","status","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAsBC,OAAO,CAACC,GAApC;AAEA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAG,GAAEL,iBAAkB;AADT,CAAb,CAAZ;AAIAG,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACIC,KAAK,IAAI;AACLA,EAAAA,KAAK,CAACC,OAAN,CAAc,cAAd,IAAiC,UAASZ,WAAW,CAACa,KAAM,EAA5D;AACA,SAAOF,KAAP;AACH,CAJL;AAOAN,GAAG,CAACG,YAAJ,CAAiBM,QAAjB,CAA0BJ,GAA1B,CACIC,KAAK,IAAI;AACL,MAAIA,KAAK,CAACI,IAAN,IAAcJ,KAAK,CAACI,IAAN,CAAWC,OAA7B,EAAsC;AAClCC,IAAAA,KAAK,CAACN,KAAK,CAACI,IAAN,CAAWC,OAAZ,CAAL;AACH;;AAED,SAAOL,KAAP;AACH,CAPL,EAQIO,KAAK,IAAI;AACL,QAAM;AAACJ,IAAAA;AAAD,MAAaI,KAAnB;;AAEA,MAAIJ,QAAQ,CAACC,IAAb,EAAmB;AACfE,IAAAA,KAAK,CAACH,QAAQ,CAACC,IAAV,CAAL;AACH;;AAED,MAAID,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAlB,IAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACH;AACJ,CAnBL;AAsBA,SAAQf,GAAR","sourcesContent":["import Axios from \"axios\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport {history} from \"../routes\"\r\n\r\nconst {REACT_APP_URL_API} = process.env;\r\n\r\nconst api = Axios.create({\r\n    baseURL: `${REACT_APP_URL_API}`,\r\n});\r\n\r\napi.interceptors.request.use(\r\n    value => {\r\n        value.headers['X-AUTH-TOKEN'] = `Bearer ${AuthService.token}`;\r\n        return value;\r\n    }\r\n);\r\n\r\napi.interceptors.response.use(\r\n    value => {\r\n        if (value.data && value.data.message) {\r\n            alert(value.data.message);\r\n        }\r\n\r\n        return value;\r\n    },\r\n    error => {\r\n        const {response} = error;\r\n\r\n        if (response.data) {\r\n            alert(response.data)\r\n        }\r\n\r\n        if (response.status === 401) {\r\n            // @Todo emitir alerta\r\n            history.push('/');\r\n        }\r\n    }\r\n);\r\n\r\nexport {api}\r\n"]},"metadata":{},"sourceType":"module"}